FastAPI는 API를 통해 데이터를 요청할 때 주로 쿼리 매개변수와 경로 매개변수 두 가지방식을 사용합니다.
쿼리매개변수는 URL의 물음표('?') 기호 이후에 "키-값" 쌍으로 전달되며 선택적인 데이터를 전송하는데
적합합니다. 반면 경로 매개변수는 URL의 특정 부분을 대체하여 필수적인 리소스 식별자로서 작동합니다.


## 쿼리 매개변수

웹 API와 상호작요으할 때 쿼리 매개변수는 클라이언트가 서버에 정보를 전달하는 데 사용되는 주요 수단중 하나입니다.
URL에서 '?' 기호 뒤에 위치하는 키와 값의 쌍을 쿼리 매개변수 또는 쿼리 파라미터라고 합니다.
이러한 쿼리 매개변수를 사용하면 한 URL 내에서 다양한 데이터를 서버로 전하고 서버는 이를 해석하여 요청에 따라
다른 결과를 반환할 수  있습니다.

(e.g) http://example.com/items/?skip=0&limit=10
위 예시에서 skip=0과 limit=10이 쿼리 매개변수입니다.
이러한 매개변수를 API경로에 포함함으로써 사용자는 좀 더 세밀하게 요청할 수 있습니다.

FastAPI에서 쿼리 매개변수를 처리하는 방법은 매우 간단합니다.
함수의 인자로 쿼리 매개변수의 이름을 추가하기만 하면 FastAPI가 이를 ㅡㅡ자동으로 인식하고
해당 URL로부터 값들을 추출하는 함수에 전달합니다.

# "/items/" 경로에 대한 GET 요청을 처리하는 함수입니다.
# 'skip'과 'limit'이라는 2개의 쿼리 매개변수를 받습니다.
@app.get("/items/")
async def read_items(skip, limit):
    # 함수가 호출될 때 FastAPI는 'skip'과 'limit' 매개변수에 대한 값을
    # 요청 URL에서 추출하여 전달합니다.
    return {"skip": skip, "limit": limit}

위 코드는 read_items() 함수는 skip, limit이라는 두 개의 매개변수를 정의하고 있습니다.
이 방식으로 FastAPI는 쿼리 매개변수를 통해 유연하게 API의 기능을 확장할 수 있게 해주며 사용자가
API를 더욱 쉽게 사용할 수 있도록 지원합니다.

@app.get("/items/")
# 쿼리 매개변수에 다음과 같이 타입 힌트도 적용 가능합니다.
# 사용자가 값을 명시하지 않을 시 기본값도 설정 가능합니다.
async def read_items(skip: int = 0, limit: int = 10):
    return {"skip": skip, "limit": limit}
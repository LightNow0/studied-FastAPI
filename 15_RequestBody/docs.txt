HTTP  프로트콜과  요청
프로토콜은 컴퓨터나 원격장치 간의 통신을 위한 규칙의 집합입니다.
이 규칙은 데이터 포멧, 타이밍, 시퀀싱, 에러 처리방법 등을 포함하여 네트워크상에서 정보가 어떻게
전송되어야 하는지를 정의합니다.
일반적인 통신  프로토콜에는 TCP/IP, HTTP, FTP등이 있으며 각각은 다양한 통신 요구사항을 충족하기 위해 설계됩니다.


1. HTTP
HTTP[HyperText Transfer Protocol]는 웹에서 데이터를 교환하기 위한 프로토콜입니다
WWW의 기초가 되는 이 프로토콜은 클라이언트와 서버 간에 HTML 문서나 이미지 같은 리소스를 요청하고 전송하는 데 사용됩니다.
HTTP는 상태가 없는 프로토콜이지만 쿠키 등의 기술을 사용하여 상태 정보를 유지할 수 있습니다.

HTTP 요청은 클라이언트가 서버에게 특정 작업을 요청하는 메시지입니다.
일반적으로 웹브라우저에서 웹서버로 정보를 얻거나 서버상의 데이터를 수정하기 위해 사용됩니다.

- Method: 서버에 요청하는 작업의 유형을 정의합니다.(GET, POST등등)
- URL: 요청이 지시되는 리소스의 위치를 나타냅니다.
- Headers: 요청에 대한 메타데이터를 포함하며 인증, 캐싱, 클라이언트 유형등의 정보를 담습니다.
- Body: 일부 HTTP메서드에서 사용되며전송할 데이터를 담습니다.


## FastAPI에서의 요청바디 처리
FastAPI는 요청바디를 처리하는 강력한 메커니즘을 제공합니다.
클라이언트로부터 서버로 전송되는 데이터,  특히 복잡한 구조의 데이터를 캡쳐하고 처리할 때 Body()함수를 사용합니다.
해당 함수는 모든 요청에 사용하지는 않습니다.
POST, PUT,PATCH 메서드 즉 서버의 상태를 변경할 수 있는 데이터를 전송하는데에 사용이되며
해당 데이터가 HTTP 프로토콜의 바디 부분에 넣어지므로 해당 메서드에서만 요청바디를 정의하기 위해 Body()함수를 사용합니다.

GET의 경우 데이터를 서버로부터 검색을 하기 위해 사용되며 일반적으로 전송하는 바디를 포함하지 않습니다.
Body()함수를 사용하지 않는 대신 Query(), Path(), Header()와 같은 함수들을 사용하여 매개변수를 정의합니다.


# 요청바디의 다양한 옵션
defailt: 이 필드가 선택적임을 나타냅니다. 기본값으로 None을 설정하여 바디 데이터가 제공되지 않는 경우를 처리합니다.
example: 자동 문서화 도구에서 해당 필드에 대해 예시값을 제공합니다. API 사용자가 요청을 구성하는 방법을 이해하는데 도움이 됩니다.
media_type: 요청 바디의 미디어 타입을 지정합니다. 여기서 application/json을 사용하여 JSON형식의 데이터를 전송받을 것임을 명시합니다.
alias: 요청바디의 JSON필드에 대한 별칭을 설정합니다. 본 예제에서 실제로는 사용되지 않습니다.
title: 문서에서 바디에 대한 보여줄 제목을 설정합니다. "Sample Item"으로 설정하여 문서에서 이를 쉽게 식별할 수 있습니다.
description: 요청바디에 대한 상세설명을 제공합니다. "This is a Sample item"으로 설정하여 해당필드의 용도를 설명합니다.
deprecated: 해당 필드가 더 이상 사용되지 않는다고 표시하는 옵션입니다.
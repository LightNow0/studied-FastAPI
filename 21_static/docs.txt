## 정적 파일

웹 애플리케이션을 만들 때 정적 파일은 괸장히 중요합니다. 정적 파일이한 HTML, CSS, JS, Image file 같은 것들을 의미합니다.
이러한 파일들은 그대로 브라우저에 전달되고 서버에서는 변경 없습니다. Fast API에서도 이런 정적 파일을 쉽게 다룰 수 있는 기능을 제공합니다.

main.py 코드 파일이 있는 폴더에서 static이라는 하위 폴더를 만듭니다.
그리고 이미지 파일을 넣어줍니다.

# 구조
 /
    - main.py
    - static
        -image.jpg



# app.mount() 메서드를 사용해서 /static이라는 URL 경로와 static 디렉토리를 연결해주고 있습니다.
# 그리고 static이라는 이름으로 지정했습니다.
app.mount("/static", StaticFiles(directory='static'), name="static")


directory: 이옵션은 정적 파일들이 어디에 있는지 알려주는 것입니다. 위 코드에서는 static 폴더를 지정했습니다.
name: 이 옵션은 마운트한 정적 파일 설정에 이름을 붙여주는 것입니다. 디버깅이나 문서화할 때 유용합니다.


# 용어
- 정적파일(static file): 서버에서 변경이 없이 그대로 브라우저에 전달되는 파일들을 의미합니다.
- 마운트(mount): 특정 URL 경로와 ,실제 디렉토리(or 다른 애플리케이션)을 연결해주는 것입니다.
    예를 들어 /static 폴더에서 처리될 거라는 것을 알려주는 것입니다.


# 정적 파일과 웹 페이지 구현
FastAPI를 사용하여 웹 애플리케이션을 개발할 때 index.html과 함께 정적 파일을 어떻게 관리하고 제공할지는 중요한 문제입니다.

# 프로젝트의 기본 구조
/
    - main.py
    - static/
        - image.jpg
    -templates/
        - index.html

# 실무적인 활용 및 ,이점
- 구조적인 관리: static과 templates 폴더를 분리함으로써 코드의 관리가 쉬워집니다.
- 효율적인 캐싱: FastAPI의 staticfile 기능은 브라우저 캐싱 을 자동으로 관리해주므로 더 빠른 페이지 로딩이 가능합니다.
- 보안: FastAPI는 정적인 파일에 대한 안전한 접근을 보장합니다.


## 기존 웹페이지 통합
FastAPI를 사용하여 웹 애플리케이션을 개발할 때 가끔은 기존에 이미 작성된 웹 페이지를 FastAPI 내에서 동작하도록 만들어야
할 때가 있습니다. 이럴 경우 FastAPI의 설정을 약간만 조정하면 기존 웹 피이지를 쉬비게 통합할 수 있습니다.

# 프로젝트의 구조
/
    - main.py
    - static/
        - img/
            - image.jpg
    - templates
        - index.html

- main.py: FastAPI 애플리케이션의 주 실행 파일입니다.
- static/: 정적 파일을 저장하는 폴더입니다.
- img/: 이미지 파일을 저장하는 하위 폴더입니다.
- image.jpg: 웹페이지에서 사용할 이미지 파일입니다
- templates/: HTML 템플릿을 저장하는 폴더입니다.
- index.html: 웹 페이지의 주 HTML 파일입니다.
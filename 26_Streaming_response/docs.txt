## 스트리밍 응답(Streaming Response)

스트리밍 응답은 일반적인 HTTP  응답과는 다르게 데이터를 일정 단위로 나누어 순차적으로 전송하는 방법입니다.
이는 대용량 파일을 다루거나 실시간으로 데이터를 전달해야 하는 상황에서 유용합니다.

- 메모리 절약: 대용량 파일을 한번에 로딩하지 않기 때문에 메모리를 절약할 수 있습니다.
- 레이턴시 감소: 클라이언트가 일부 데이터를 먼저 받아볼 수 있으므로 사요으자 경험이 향상됩니다.
- 대용량 처리 기능: 데이터가 계속해서 생성되는 경우 이를 실시간으로 처리할 수 있습니다.



## 주요 옵션과 문법은 다음과 같습니다.
- 첫번째 인자: 데이터를 생성하는 제너레이터 함수나 이터러블 개기체를 첫 번째 인자로 받습니다.
            이 데이터는 HTTP  응답으로 스트리밍됩니다.
- media_type: media_type은 MIME(Multipurpose Internet Mail Extensions)타입을 설정하여
                응답의 Content-Type 헤더 값을 지정합니다.


## 주로 사용되는 media_type의 목록
기본적인 MIME 타입들을 나타내며 사용 목적과 데이터 형식에 따라 적절한 media_type을 선택하여 사용해야합니다.
- text/plain: 일반 텍스트 데이터
- text/html: HTML 문서
- text/css: CSS 문서
- text/javascript: 자바스크립트 코드
- text/csv: CSV 형식의 데이터
- application/json: JSON 형식의 데이터
- application/xml: XML 문서
- application/x-www-form-urlencoded: HTML 폼을 통해 제출된 데이터
- application/pdf: PDF문서
- application/msword: Microsoft World 문서
- application/octet-stream: 이진 데이터를 위한 기본값으로 정해진 타입이 없는 파일을 전송 할 때 사용
- application/zip: ZIP 압축파일
- image/png: PNG 이미지
- image/jpeg: JPEG 이미지
- image/gif: GIF 이미지
- audio/mpeg: MP3 or 기타 MPEG 오디오
- audio/ogg: Ogg Vorbis 오디오
- video/mp4: MP4 비디오
- vidoe/mpeg: MPEG 비디오
- headers: 추가적인 HTTP 헤더를 딕셔너리 형태로 전달할 수 있습니다.
    ex. 파일 다운로드를 위한 Content-Disposition 헤더를 설정할 수 있습니다.
- Background: background 인자에 BackgroundTasks 인스턴스를 전달하여 스트리밍 작업과 변행하여
                실행할 백그라운드 테스크를 지정할 수 있습니다.
- status-code: 기본적인 200으로 설정되어 있지만 필요한 경우 다른 HTTP 상태코드를 지정할 수 있습니다.
